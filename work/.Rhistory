#
with(data2, by(Q31, PPINCIMP, summary))
# Chunk 33
with(data2, summary(Q32))
# by gender
with(data2, by(Q32, PPGENDER, summary))
#
with(data2, by(Q32, PPETHM, summary))
#
with(data2, by(Q32, PPINCIMP, summary))
# Chunk 34
with(data2, summary(Q33))
# by gender
with(data2, by(Q33, PPGENDER, summary))
#
with(data2, by(Q31, PPETHM, summary))
#
with(data2, by(Q31, PPINCIMP, summary))
# Chunk 35
with(data2, table(Q35))
# Chunk 36
with(data2, summary(Q36))
# Chunk 37
with(data2, summary(Q37))
# Chunk 38
with(data2, summary(Q38))
# Chunk 39
with(data2, table(Q39))
# Chunk 40
with(data2, table(Q40))
# Chunk 41
with(data2, table(Q41))
# Chunk 42
with(data2, table(Q42))
# Chunk 43
with(data2, table(Q43))
# Chunk 44
with(data2, summary(Q44))
# Chunk 45
with(data2, summary(Q45))
# Chunk 46
with(data2, summary(Q46))
# Chunk 47
with(data2, table(Q47))
# Chunk 48
with(data2, table(Q48))
# Chunk 49
with(data2, table(Q49))
# Chunk 50
with(data2, table(Q50))
View(data2)
View(with(data2, Q1))
View(with(data2, [Q1]))
View(with(data2, [3]))
View(data2[3])
View(data2[3:5])
View(data2[188:250])
View(data2[257:314])
View(data2[315:392])
View(data2[334])
View(data2[316])
View(data2[334])
View(data2[316:334])
View(data2[316:344])
View(data2[345:373])
View(data2[374:375])
View(data2c([374:375], [376]))
View(data2(c([374:375], [376])))
View(data2[c([374:375, 376])])
View(data2[c(374:375, 376)])
View(data2[c(374:375, 405:406)])
View(data2[c(374:375, 485:495, 405:406)])
View(data2[c(374:375, 485:495)])
View(data2[c(374:375, 407:417, 405:406)])
View(data2[c(374:375, 407:417, 405:406, 418:428)])
data2 %>%
select([c(374:375, 407:417, 405:406, 418:428)])
select(c(374:375, 407:417, 405:406, 418:428))
data2 %>%
select([c(374:375, 407:417, 405:406, 418:428)])
data2 %>%
select(c([374:375, 407:417, 405:406, 418:428]))
data2 %>%
select([c(374:375, 407:417, 405:406, 418:428)])
data2 %>%
select(c(374:375, 407:417, 405:406, 418:428))
data_hhm <- data2 %>%
select(c(374:375, 407:417, 405:406, 418:428))
View(data_hhm)
with(data_hhm, table(Q35))
with(data_hhm, summary(HHM1_AGE))
with(data_hhm, table(HHM1_AGE))
with(data_hhm, plot(HHM1_AGE))
with(data_hhm, hist(HHM1_AGE))
with(data_hhm, histogram(HHM1_AGE))
with(data_hhm, hist(HHM2_AGE))
data_hhm %>%
filter(HH1_AGE > 18) %>%
count(n())
data_hhm %>%
filter(HHM1_AGE > 18) %>%
count(n())
data_hhm %>%
filter(HHM1_AGE > 18) %>%
count(n())
filter(HHM1_AGE > 18)
data_hhm %>%
filter(HHM1_AGE > 18)
a = data_hhm %>%
filter(HHM1_AGE > 18)
table(a)
View(a)
a = data_hhm %>%
filter(HHM1_AGE < 18)
View(a)
a = data_hhm %>%
filter(HHM1_AGE < 18, HHM2_AGE < 18)
View(a)
a = data_hhm %>%
filter(HHM1_AGE < 18)
View(a)
a = data_hhm %>%
select(374:375, 407:417)
rm(a)
hhm_ch1 <- data_hhm %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
hhm_ch1 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
hhm_ch2 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
View(hhm_ch1)
table(hhm_ch1)
hist(hhm_ch1)
hist(hhm_ch1$HHM1_AGE)
hhm_ch1 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18) %>%
count()
hhm_ch1 %>%
count()
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
count()
View(hhm_ch1)
hhm_ch1 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
count()
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
count()
hhm_ch2 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
count()
View(hhm_ch2)
hhm_ch2 <- data2 %>%
select(c(405:406, 418:428)) %>%
filter(HHM2_AGE < 18)
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
count()
data_hhm <- data2 %>%
select(c(374:375, 407:417, 405:406, 418:428))
with(data_hhm, hist(HHM1_AGE))
with(data_hhm, hist(HHM2_AGE))
hhm_ch1 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
hhm_ch2 <- data2 %>%
select(c(405:406, 418:428)) %>%
filter(HHM2_AGE < 18)
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
count()
with(hhm_ch1, table(HHM1_AGE))
with(hhm_ch2, table(HHM2_AGE))
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(sum(HHM1_AGE))
with(hhm_ch1, table(HHM1_AGE))
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(sum(HHM1_AGE))
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(a = n())
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(a = n())
with(hhm_ch1, table(HHM1_AGE))
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(a = n())
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
count()
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(n = n()) %>%
sum(n)
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(n = n()) %>%
summarise(sum(n))
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
summarise(n = n()) %>%
summarise(sum(n))
with(hhm_ch1, table(HHM1_AGE))
with(hhm_ch1, table(Q35))
with(hhm_ch2, table(Q43))
with(hhm_ch2, table(Q50))
with(data2, table(Q50))
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(n = n()) %>%
summarise(sum(n))
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
summarise(n = n()) %>%
summarise(sum(n))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rm(list = ls())
setwd("~/git/banana-phone/work")
library(dplyr)
library(tidyr)
library(ggplot2)
#library(psych)
load("clean/cleaning_all.Rdata")
# set new names
names(data2) <- new_name
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rm(list = ls())
setwd("~/git/banana-phone/work")
library(dplyr)
library(tidyr)
library(ggplot2)
#library(psych)
load("clean/cleaning_all.Rdata")
# set new names
names(data2) <- new_name
# Chunk 2
# all HHM1 and HHM2 data
data_hhm <- data2 %>%
select(c(374:375, 407:417, 405:406, 418:428))
# all ages histogram
with(data_hhm, hist(HHM1_AGE))
with(data_hhm, hist(HHM2_AGE))
# Chunk 3
# subset children data
hhm_ch1 <- data2 %>%
select(c(374:375, 407:417)) %>%
filter(HHM1_AGE < 18)
hhm_ch2 <- data2 %>%
select(c(405:406, 418:428)) %>%
filter(HHM2_AGE < 18)
# distribution of age
with(hhm_ch1, table(HHM1_AGE))
with(hhm_ch2, table(HHM2_AGE))
# count total number of children >18 years
hhm_ch1 %>%
group_by(HHM1_AGE) %>%
summarise(n = n()) %>%
summarise(sum(n))
hhm_ch2 %>%
group_by(HHM2_AGE) %>%
summarise(n = n()) %>%
summarise(sum(n))
# Chunk 4
with(hhm_ch1, table(Q35))
# Chunk 5
with(hhm_ch1, summary(Q36))
# Chunk 6
with(hhm_ch1, summary(Q37))
# Chunk 7
with(hhm_ch1, summary(Q38))
# Chunk 8
with(hhm_ch1, table(Q39))
# Chunk 9
with(hhm_ch1, table(Q40))
# Chunk 10
with(hhm_ch1, table(Q41))
# Chunk 11
with(hhm_ch1, table(Q42))
# Chunk 12
with(hhm_ch2, table(Q43))
# Chunk 13
with(hhm_ch2, summary(Q44))
# Chunk 14
with(hhm_ch2, summary(Q45))
# Chunk 15
with(hhm_ch2, summary(Q46))
# Chunk 16
with(hhm_ch2, table(Q47))
# Chunk 17
with(hhm_ch2, table(Q48))
# Chunk 18
with(hhm_ch2, table(Q49))
# Chunk 19
with(hhm_ch2, table(Q50))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rm(list = ls())
setwd("~/git/banana-phone/work")
library(dplyr)
library(tidyr)
library(ggplot2)
library(psych)
load("clean/cleaning_all.Rdata")
# set new names
names(data2) <- new_name
# Q1
with(data2, table(Q1))
q1 <- data2 %>%
count(Q1)
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
# alternative plot:
#ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
#  geom_bar(stat = 'identity', position = position_dodge())
# by gender, PPGENDER
with(data2, table(PPGENDER, Q1))
q1 <- data2 %>%
count(Q1, PPGENDER)
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPGENDER), position = position_dodge())
# plot with facet
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPGENDER)
# by ethnicity, PPETHM
with(data2, table(PPETHM, Q1))
q1 <- data2 %>%
count(Q1, PPETHM)
# plot
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = PPETHM)) +
geom_bar(stat = 'identity', position = position_dodge())
# plot with facet
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPETHM)
# by income, PPINCIMP
with(data2, table(PPINCIMP, Q1))
q1 <- data2 %>%
count(Q1, PPINCIMP)
# plot
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = PPINCIMP)) +
geom_bar(stat = 'identity', position = position_dodge())
# plot with facet
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPINCIMP)
View(q1)
q1 <- data2 %>%
count(Q1)
View(q1)
# Q1
with(data2, table(Q1))
q1 <- data2 %>%
count(Q1)
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
# alternative plot:
#ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
#  geom_bar(stat = 'identity', position = position_dodge())
# by gender, PPGENDER
with(data2, table(PPGENDER, Q1))
q1 <- data2 %>%
count(Q1, PPGENDER)
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPGENDER), position = position_dodge())
# plot with facet
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPGENDER)
# by ethnicity, PPETHM
with(data2, table(PPETHM, Q1))
q1 <- data2 %>%
count(Q1, PPETHM)
# plot
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = PPETHM)) +
geom_bar(stat = 'identity', position = position_dodge())
# plot with facet
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPETHM)
# by income, PPINCIMP
with(data2, table(PPINCIMP, Q1))
q1 <- data2 %>%
count(Q1, PPINCIMP)
# plot
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = PPINCIMP)) +
geom_bar(stat = 'identity', position = position_dodge())
# plot with facet
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPINCIMP)
q1 <- data2 %>%
count(Q1)
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ], + aes(x = Q1, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ], aes(x = Q1, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ], aes(x = Q1, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), stat = 'identity', position = position_dodge())
# alternative plot:
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(y = Q1, fill = Q1), stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(aes(x = Q1, fill = Q1), stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPGENDER), position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPGENDER), position = position_dodge()) + facet_wrap(~Q1)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPGENDER), position = position_dodge()) + facet_wrap(~PPGENDER)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPGENDER)
q1 <- data2 %>%
count(Q1, PPETHM)
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = PPETHM)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPETHM)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPETHM)
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = Q1)) +
geom_bar(stat = 'identity', position = position_dodge()) + facet_wrap(~PPETHM)
ggplot(q1[!is.na(q1$Q1), ], aes(x = Q1, y = n, fill = PPETHM)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPETHM), position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPGENDER)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPETHM), position = position_dodge())
# plot with facet
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPETHM)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPINCIMP), position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPINCIMP)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPINCIMP), position = position_dodge()) + facet_wrap(~Q1)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = PPINCIMP, fill = Q1), position = position_dodge()) + facet_wrap(~Q1)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = PPINCIMP, fill = PPINCIMP), position = position_dodge()) + facet_wrap(~Q1)
# Q1
with(data2, table(Q1))
q1 <- data2 %>%
count(Q1)
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
# by gender, PPGENDER
with(data2, table(PPGENDER, Q1))
# plot with facet
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPGENDER)
# by ethnicity, PPETHM
with(data2, table(PPETHM, Q1))
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPETHM), position = position_dodge())
# plot with facet
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPETHM)
# PPINCIMP
with(data2, table(PPINCIMP, Q1))
# plot
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPINCIMP), position = position_dodge())
# plot with facet
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = PPINCIMP, fill = PPINCIMP), position = position_dodge()) + facet_wrap(~Q1)
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1))
with(data2, table(PPGENDER, Q1))
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPGENDER)
with(data2, table(PPETHM, Q1))
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPETHM), position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPETHM)
with(data2, table(PPINCIMP, Q1))
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = Q1, fill = PPINCIMP), position = position_dodge())
ggplot(data2[!is.na(data2$Q1), ]) + geom_bar(mapping = aes(x = PPINCIMP, fill = PPINCIMP), position = position_dodge()) + facet_wrap(~Q1)
View(q1)
a = ggplot(data2[!is.na(data2$Q1), ])
a + geom_bar(mapping = aes(x = Q1, fill = Q1))
a + geom_bar(mapping = aes(x = Q1, fill = Q1), position = position_dodge()) + facet_wrap(~PPGENDER)
a = ggplot(data2[!is.na(data2$Q2), ])
a + geom_bar(mapping = aes(x = Q2, fill = Q2))
q2 <- data2 %>%
count(Q2)
ggplot(q2, aes(x = Q2, y = n, fill = Q2)) + geom_bar(stat = 'identity')
with(data2, table(Q2))
# plot
a = ggplot(data2[!is.na(data2$Q2), ])
a + geom_bar(mapping = aes(x = Q2, fill = Q2))
# by gender
with(data2, table(Q2, PPGENDER))
q2 <- data2 %>%
count(Q2, PPGENDER)
ggplot(q2, aes(x = Q2, y = n, fill = PPGENDER)) +
geom_bar(stat = 'identity', position = position_dodge())
# by ethnicity
with(data2, table(Q2, PPETHM))
q2 <- data2 %>%
count(Q2, PPETHM)
ggplot(q2, aes(x = Q2, y = n, fill = PPETHM)) +
geom_bar(stat = 'identity', position = position_dodge())
# by income
with(data2, table(PPINCIMP, Q2))
q2 <- data2 %>%
count(Q2, PPINCIMP)
ggplot(q2, aes(x = Q2, y = n, fill = PPINCIMP)) +
geom_bar(stat = 'identity', position = position_dodge())
a + geom_bar(mapping = aes(x = Q2, fill = Q2), position = position_dodge()) + facet_wrap(~PPGENDER)
q2 <- data2 %>%
count(Q2, PPGENDER)
ggplot(q2, aes(x = Q2, y = n, fill = PPGENDER)) +
geom_bar(stat = 'identity', position = position_dodge())
source('~/git/banana-phone/work/clean/data_cleaning2.R')
