install.packages("rmarkdown")
source('~/git/banana-phone/work/clean/data_cleaning1.R')
source('~/git/banana-phone/work/clean/data_cleaning2.R')
View(data2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rm(list = ls())
setwd("~/git/banana-phone/work")
library(dplyr)
library(tidyr)
library(ggplot2)
# data2, new_name, old_name
load("clean/cleaning_all.Rdata")
# set new names
names(data2) <- new_name
lapply(X = data2[3:19], FUN = function(x){aggregate(data.frame(count = x), list(value = x), length)})
View(data2)
lapply(X = data2[5:19], FUN = function(x){aggregate(data.frame(count = x), list(value = x), length)})
lapply(X = data2[28:33], FUN = function(x){aggregate(data.frame(count = x), list(value = x), length)})
lapply(X = data2[28:33], FUN = function(x){aggregate(data.frame(count = x), list(response = x), length)})
lapply(X = data2[34:42], FUN = function(x){aggregate(data.frame(count = x), list(value = x), length)})
lapply(X = data2[43:50], FUN = function(x){aggregate(data.frame(count = x), list(value = x), length)})
lapply(X = data2[43:50], FUN = function(x){table(data.frame(count = x), list(response = x), length)})
lapply(X = data2[43:50], FUN = function(x){aggregate(data.frame(count = x), list(response = x), length)})
lapply(X = data2$Q1, FUN = function(x){aggregate(data.frame(count = x), list(response = x), length)})
tapply(X = data2$Q1, FUN = function(x){aggregate(data.frame(count = x), list(response = x), length)})
tapply(data2$Q1, data2$PPGENDER, FUN = function(x){aggregate(data.frame(count = x), list(response = x), length)})
tapply(data2$PPGENDER, data2$Q1, FUN = function(x){aggregate(data.frame(count = x), list(response = x), length)})
tapply(data2$PPGENDER, data2$Q1, FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, data2['Q1'], FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, data2['Q1':'Q2'], FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, data2[c('Q1','Q2')], FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, data2['Q1'], FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2[28:33], data2$PPGENDER, FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
lapply(data2[28:33], data2$PPGENDER, FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$Q1, data2$PPGENDER, FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, list(data2$Q1), FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, list(data2$Q1, data2$Q2), FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, data2$Q1, FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$PPGENDER, c(data2$Q1, data2$Q2), FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$Q1, c(data2$PPGENDER, data2$PPEDUCAT), FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$Q1, c(data2$PPGENDER), FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
tapply(data2$Q1, data2$PPGENDER, FUN = function(x){aggregate(data.frame(count = x), list(group = x), length)})
install.packages("prettyR")
library(prettyR)
mytab = table(data2$Q2, data2$PPGENDER)
addmargins(mytab)
with(data2, table(PPGENDER, Q2))
with(data2, addmargins(table(PPGENDER, Q2)))
with(data2, addmargins(table(Q1)))
with(data2, (table(Q1))
with(data2, (table(Q1)))
install.packages("mosaic")
library(prettyR)
xtab(data2$Q2 ~ data2$PPGENDER, data = data2)
xtab(Q2 ~ PPGENDER, data = data2)
xtab(PPGENDER ~ Q2, data = data2)
with(data2, addmargins(table(PPGENDER, Q1)))
rm(list = ls())
library(ggplot2)
g1 <- ggplot(data2[!is.na(data2$Q1), ])
rm(list = ls())
library(ggplot2)
load("clean/cleaning_all.Rdata")
g1 <- ggplot(data2[!is.na(data2$Q1), ])
rm(new_name); rm(old_name)
save(list = ls(all.names = TRUE), file ="clean/plotting1.RData")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rm(list = ls())
setwd("~/git/banana-phone/work")
library(dplyr)
library(tidyr)
library(ggplot2)
# load data2, new_name, old_name
load("clean/cleaning_all.Rdata")
load("clean/plotting1.Rdata")
# set new names
names(data2) <- new_name
source('~/git/banana-phone/work/clean/plotting1.R')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
rm(list = ls())
setwd("~/git/banana-phone/work")
library(dplyr)
library(tidyr)
library(ggplot2)
# load data2, new_name, old_name
load("clean/cleaning_all.Rdata")
# load ggplot variables
load("clean/plotting1.Rdata")
# set new names
names(data2) <- new_name
g1 + geom_bar(mapping = aes(x = Q1, fill = Q1))
g6 + geom_bar(mapping = aes(x = Q6, fill = Q6))
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(psych)
load("clean/cleaning_all.Rdata")
View(data2)
names(data2) <- new_name
View(data2)
rm(list = ls())
load("clean/cleaning_all.Rdata")
View(data2)
names(data2) <- old_name
View(data2)
xtab(PPGENDER ~ Q2, data = data2)
install.packages("epitools")
library(epitools)
mytab = table(data2$Q2, data2$PPGENDER)
addmargins(mytab)
xtab(PPGENDER ~ Q2, data = data2)
xtab(PPGENDER ~ Q1, data = data2)
xtab(PPETHM~ Q2, data = data2)
xtab(Q2 ~ PPETHM, data = data2)
